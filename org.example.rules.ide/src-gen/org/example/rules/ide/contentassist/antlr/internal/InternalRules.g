/*
 * generated by Xtext 2.20.0
 */
grammar InternalRules;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.example.rules.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.example.rules.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.example.rules.services.RulesGrammarAccess;

}
@parser::members {
	private RulesGrammarAccess grammarAccess;

	public void setGrammarAccess(RulesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getUnorderedGroup()); }
		(rule__Model__UnorderedGroup)
		{ after(grammarAccess.getModelAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionRef
entryRuleActionRef
:
{ before(grammarAccess.getActionRefRule()); }
	 ruleActionRef
{ after(grammarAccess.getActionRefRule()); } 
	 EOF 
;

// Rule ActionRef
ruleActionRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionRefAccess().getNodeAssignment()); }
		(rule__ActionRef__NodeAssignment)
		{ after(grammarAccess.getActionRefAccess().getNodeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilter
entryRuleFilter
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterAccess().getGroup()); }
		(rule__Filter__Group__0)
		{ after(grammarAccess.getFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__ElementAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getElementFromKeyword_0_0_0()); }
		'from'
		{ after(grammarAccess.getFilterAccess().getElementFromKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFilterAccess().getElementToKeyword_0_0_1()); }
		'to'
		{ after(grammarAccess.getFilterAccess().getElementToKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFilterAccess().getElementSubjectKeyword_0_0_2()); }
		'subject'
		{ after(grammarAccess.getFilterAccess().getElementSubjectKeyword_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionKeyword_0()); }
	'action'
	{ after(grammarAccess.getActionAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_1()); }
	(rule__Action__NameAssignment_1)
	{ after(grammarAccess.getActionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__0__Impl
	rule__Filter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getElementAssignment_0()); }
	(rule__Filter__ElementAssignment_0)
	{ after(grammarAccess.getFilterAccess().getElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__1__Impl
	rule__Filter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getFilterAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getValueAssignment_2()); }
	(rule__Filter__ValueAssignment_2)
	{ after(grammarAccess.getFilterAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
	(rule__Rule__NameAssignment_1)
	{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getFiltersKeyword_3()); }
	'filters'
	{ after(grammarAccess.getRuleAccess().getFiltersKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRuleAccess().getFiltersAssignment_5()); }
		(rule__Rule__FiltersAssignment_5)
		{ after(grammarAccess.getRuleAccess().getFiltersAssignment_5()); }
	)
	(
		{ before(grammarAccess.getRuleAccess().getFiltersAssignment_5()); }
		(rule__Rule__FiltersAssignment_5)*
		{ after(grammarAccess.getRuleAccess().getFiltersAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__6__Impl
	rule__Rule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__7__Impl
	rule__Rule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getActionsKeyword_7()); }
	'actions'
	{ after(grammarAccess.getRuleAccess().getActionsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__8__Impl
	rule__Rule__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__9__Impl
	rule__Rule__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRuleAccess().getActionsAssignment_9()); }
		(rule__Rule__ActionsAssignment_9)
		{ after(grammarAccess.getRuleAccess().getActionsAssignment_9()); }
	)
	(
		{ before(grammarAccess.getRuleAccess().getActionsAssignment_9()); }
		(rule__Rule__ActionsAssignment_9)*
		{ after(grammarAccess.getRuleAccess().getActionsAssignment_9()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__10__Impl
	rule__Rule__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
	}
:
	rule__Model__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getActionsAssignment_0()); }
						(rule__Model__ActionsAssignment_0)
						{ after(grammarAccess.getModelAccess().getActionsAssignment_0()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getActionsAssignment_0()); }
						((rule__Model__ActionsAssignment_0)=>rule__Model__ActionsAssignment_0)*
						{ after(grammarAccess.getModelAccess().getActionsAssignment_0()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getRulesAssignment_1()); }
						(rule__Model__RulesAssignment_1)
						{ after(grammarAccess.getModelAccess().getRulesAssignment_1()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getRulesAssignment_1()); }
						((rule__Model__RulesAssignment_1)=>rule__Model__RulesAssignment_1)*
						{ after(grammarAccess.getModelAccess().getRulesAssignment_1()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ActionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getActionsActionParserRuleCall_0_0()); }
		ruleAction
		{ after(grammarAccess.getModelAccess().getActionsActionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRef__NodeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionRefAccess().getNodeActionCrossReference_0()); }
		(
			{ before(grammarAccess.getActionRefAccess().getNodeActionIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionRefAccess().getNodeActionIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getActionRefAccess().getNodeActionCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__ElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getElementAlternatives_0_0()); }
		(rule__Filter__ElementAlternatives_0_0)
		{ after(grammarAccess.getFilterAccess().getElementAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getFilterAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__FiltersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getFiltersFilterParserRuleCall_5_0()); }
		ruleFilter
		{ after(grammarAccess.getRuleAccess().getFiltersFilterParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ActionsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getActionsActionRefParserRuleCall_9_0()); }
		ruleActionRef
		{ after(grammarAccess.getRuleAccess().getActionsActionRefParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
